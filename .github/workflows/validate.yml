name: UpdatedWorkflow
run-name: SFDX Lint with GitHub Actions

on:
  workflow_dispatch:
    inputs:
      Name:
        description: 'Run name or label'
        required: true
      Branch:
        description: 'Branch name to analyze (e.g., main, develop)'
        required: true
        default: 'main'
      FromCommitId:
        description: 'From commit '
        required: false
        default: '90bf5443ad8baab21a6837eca38cdad06c686a77'
      ToCommitId:
        description: 'To commit '
        required: false
        default: '03d3536c6cb8944ec97053a08e1bf7af3af5d531'
      Overall:
        description: 'Run PMD on whole branch (true) or only changed files (false)'
        required: true
        default: 'false'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
         
      - name: Determine Target Files
        id: changes
        run: |
          echo "Run Label: ${{ github.event.inputs.Name }}"
          echo "Repository: https://github.com/sahithiroy/salesforce-lwc-apex-projects"
          echo "Branch: ${{ github.event.inputs.Branch }}"
          echo "Overall: ${{ github.event.inputs.Overall }}"
          echo "FromCommitId: ${{ github.event.inputs.FromCommitId }}"
          echo "ToCommitId: ${{ github.event.inputs.ToCommitId }}"

          if [ "${{ github.event.inputs.Overall }}" = "true" ]; then
            echo "Running PMD on entire branch..."
            TARGET_FILES=$(find force-app -type f -name "*.cls")
          else
            if [ -z "${{ github.event.inputs.FromCommitId }}" ] || [ -z "${{ github.event.inputs.ToCommitId }}" ]; then
              echo "Error: FromCommitId and ToCommitId must be provided when Overall = false"
              exit 1
            fi
            echo "Running PMD on changed files between commits..."
            git fetch origin ${{ github.event.inputs.Branch }} --depth=100
            TARGET_FILES=$(git diff --name-only ${{ github.event.inputs.FromCommitId }} ${{ github.event.inputs.ToCommitId }} \
              | grep '^force-app/.*\.cls$' || true)
          fi

          echo "Files to scan:"
          echo "$TARGET_FILES"

          {
            echo "files<<EOF"
            echo "$TARGET_FILES"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Setup Java (required for PMD)
        if: steps.changes.outputs.files != ''
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

    
      - name: Run PMD Analysis
        if: steps.changes.outputs.files != ''
        run: |
          mkdir -p reports
          curl -L -o pmd-bin.zip https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
          unzip -q pmd-bin.zip
          FILES=$(echo "${{ steps.changes.outputs.files }}" | tr '\n' ',' | sed 's/,$//')
          ./pmd-bin-6.55.0/bin/run.sh pmd \
            -d "$FILES" \
            -R pmd-apex-rules.xml \
            -f json \
            -r reports/pmd-report.json || true

          # Zip PMD JSON report
          cd reports
          zip pmd-report.zip pmd-report.json
          cd ..

      - name: Upload PMD Report ZIP
        if: steps.changes.outputs.files != ''
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: reports/pmd-report.zip

      - name: Skip Analysis
        if: steps.changes.outputs.files == ''
        run: echo "No Apex class changes detected. Skipping analysis."
